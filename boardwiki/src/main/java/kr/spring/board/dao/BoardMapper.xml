<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.board.dao.BoardMapper"> 
	 <!-- 글쓰기 -->
	 <insert id="insertBoard" parameterType="boardVO">
	 	INSERT INTO board(
	 	  boa_num,
	 	  boa_category,
	 	  boa_title,
	 	  boa_content,
	 	  filename,
	 	  mem_num)
	 	VALUES(
	 	  board_boa_num_seq.nextval,
	 	  #{boa_category},
	 	  #{boa_title},
	 	  #{boa_content},
	 	  #{filename,jdbcType=VARCHAR},
	 	  #{mem_num})
	 </insert>
	 <!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->
	 <sql id="boardSearch">
	 	<where>
	 		<if test="boa_category !=null and boa_category != ''">
	 			boa_category = #{boa_category}
	 		</if>
	 		<if test="keyword !=null and keyword != ''">
	 			<if test="boa_category !=null and boa_category != ''">
	 				AND
	 			</if>
	 		</if>
	 		<if test="keyfield == 1">
	 			boa_title LIKE '%' || #{keyword} || '%'
	 		</if>
	 		<if test="keyfield == 2">
	 			boa_content LIKE '%' || #{keyword} || '%'
	 		</if>
	 		<if test="keyfield == 3">
	 			(boa_title LIKE '%' || #{keyword} || '%' OR
	 			boa_content LIKE '%' || #{keyword} || '%')
	 		</if>
	 	</where>
	 </sql>
	 
	 <sql id="boardOrder">
 		<if test="order == 1">
 			ORDER BY boa_num DESC
 		</if>
 		<if test="order == 2">
 			ORDER BY boa_hit DESC
 		</if>
 		<if test="order == 3">
 			ORDER BY fav_cnt DESC NULLS LAST
 		</if>
 		<if test="order == 4">
 			ORDER BY re_cnt DESC NULLS LAST
 		</if>
	 </sql>
	 
	 <!-- 게시판 글 총레코드수/검색레코드수 -->
	 <select id="selectRowCount" parameterType="map"
									resultType="integer">
		SELECT
			COUNT(*)
		FROM board JOIN member USING (mem_num)
		<include refid="boardSearch"></include>	 
	 </select>
	 <!-- 게시판 전체 목록/검색 목록 -->
	 <select id="selectList" parameterType="map"
	 							resultType="boardVO">
	 	SELECT
	 	   *
	 	FROM (SELECT
	 			a.*,
	 			rownum rnum
	 		   FROM (SELECT
	 		   			 boa_num,
		                 <![CDATA[
		                 REPLACE(REPLACE(boa_title,'<','&lt;'),'>','&gt;') boa_title,
		                 ]]>
		                 boa_hit,
		                 filename,
		                 boa_rdate,
		                 mem_num,
		                 mem_email,
		                 mem_nickname,
		                 re_cnt,
		                 fav_cnt
	 		   		 FROM board
	 		   		 JOIN member USING(mem_num)
	 		   		 LEFT OUTER JOIN (SELECT COUNT(*) re_cnt, boa_num FROM board_reply GROUP BY boa_num) USING(boa_num)
	 		   		 LEFT OUTER JOIN (SELECT COUNT(*) fav_cnt, boa_num FROM board_fav GROUP BY boa_num) USING(boa_num)
	 		   		 LEFT OUTER JOIN member_detail USING(mem_num)
	 		   		 <include refid="boardSearch"></include>
	 		   		 <include refid="boardOrder"></include>
	 		   		 )a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	<!-- 게시판 글 수정 -->
	<update id="updateBoard" parameterType="boardVO">
 		UPDATE board SET
 		   <if test="filename != null">
 		   filename = #{filename},
 		   </if>
 		   boa_title = #{boa_title},
 		   boa_content = #{boa_content},
 		   boa_mdate = SYSDATE
 		WHERE boa_num = #{boa_num}
 	</update>  
 	
	<!-- 댓글 등록 -->
	<insert id="insertReply" parameterType="boardReplyVO">
 		INSERT INTO board_reply(
 			boaR_num,
 			boaR_content,
 			boa_num,
 			mem_num)
 		VALUES (
 			board_reply_boaR_num_seq.nextval,
 			#{boaR_content},
 			#{boa_num},
 			#{mem_num})	
 	</insert>
	<!-- 댓글 목록 --> 
 	<select id="selectListReply" parameterType="map"
 	                            resultType="boardReplyVO">
 		SELECT
 		   *
 		FROM (SELECT
 		        a.*,
 		        rownum rnum
 		      FROM (SELECT
 		              boaR_num,
 		              <![CDATA[
 		              REPLACE(REPLACE(boaR_content,'<','&lt;'),'>','&gt;') boaR_content,
 		              ]]>
 		              boaR_rdate,
 		              boaR_mdate,
 		              boa_num,
 		              mem_nickname,
 		              mem_email,
 		              mem_num
 		            FROM (board_reply
 		            JOIN member USING(mem_num))
 		            JOIN member_detail USING(mem_num)
 		            WHERE boa_num=#{boa_num}
 		            ORDER BY boaR_num DESC)a)
 		<![CDATA[
 		WHERE rnum >= #{start} AND rnum <= #{end}
 		]]>            
 	</select>     
 </mapper>



















