<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.spring.rent.dao.RentMapper">
    <!-- 대여 목록 삽입 -->
    <insert id="insertRent">
        INSERT INTO game_rent (rent_num, rent_sdate,
        rent_edate, rent_period,
        mem_num, item_num, rent_status)
        VALUES
        (game_rent_seq.nextval, #{rent_sdate}, #{rent_edate}, #{rent_period},
        #{mem_num}, #{item_num}, #{rent_status})
    </insert>

    <!-- 대여 목록 조회 -->
    <select id="selectRentList" parameterType="map" resultType="RentVO">
        SELECT gr.*, i.item_name
        FROM game_rent gr
        LEFT JOIN item i ON gr.item_num = i.item_num
        WHERE gr.mem_num = #{mem_num}
        <include refid="rentSearch"></include>
        <include refid="rentOrder"></include>
    </select>

    <!-- 검색 필터 조건 -->
    <sql id="rentSearch">
        <where>
            <if test="keyword != null and keyword != ''">
                <if test="keyfield == 1">
                    AND i.item_name LIKE '%' || #{keyword} || '%'
                </if>
            </if>
            <if test="startDate != null and endDate != null">
                AND gr.sdate &gt;= #{startDate} AND gr.edate &lt;= #{endDate}
            </if>
        </where>
    </sql>

    <!-- 검색 필터 조건 (전체 회원) -->
    <sql id="rentSearch2">
        <where>
            <if test="keyword != null and keyword != ''">
                <if test="keyfield == 1">
                    AND i.item_name LIKE '%' || #{keyword} || '%'
                </if>
            </if>
            <if test="startDate != null and endDate != null">
                AND gr.sdate &gt;= #{startDate} AND gr.edate &lt;= #{endDate}
            </if>
        </where>
    </sql>

    <!-- 정렬 조건 -->
    <sql id="rentOrder">
        <if test="order == 1"> 
            ORDER BY i.item_name ASC
        </if>
        <if test="order == 2"> 
            ORDER BY rent_period DESC 
        </if> 
        <if test="order == 3"> 
            ORDER BY rent_status DESC
        </if> 
        <if test="order == 4">
            <!-- 필요한 경우 다른 정렬 조건 추가 -->
        </if>
    </sql>

    <!-- 총 레코드 수 조회 -->
    <select id="selectRowCount" parameterType="map" resultType="integer">
        SELECT COUNT(*)
        FROM game_rent gr
        JOIN member m ON gr.mem_num = m.mem_num
        JOIN item i ON gr.item_num = i.item_num
        WHERE gr.mem_num = #{mem_num}
        <include refid="rentSearch"></include>
        <include refid="rentOrder"></include>
    </select>

    <!-- 대여 상태 업데이트 -->
    <update id="updateRentStatus">
        UPDATE game_rent
        SET rent_status = 2
        WHERE rent_num = #{rent_num}
    </update>

    <!-- 전체 회원의 대여 목록 수 조회 -->
    <select id="selectAllMembersRowCount" parameterType="map" resultType="integer">
        SELECT COUNT(*)
        FROM game_rent gr
        JOIN member m ON gr.mem_num = m.mem_num
        JOIN item i ON gr.item_num = i.item_num
        <include refid="rentSearch2"></include>
    </select>

    <!-- 전체 회원의 대여 목록 조회 -->
    <select id="selectAllMembersRentList" parameterType="map">
        SELECT gr.*, i.item_name, m.mem_email, d.mem_nickname
        FROM game_rent gr
        LEFT JOIN item i ON gr.item_num = i.item_num
        LEFT JOIN member m ON gr.mem_num = m.mem_num
        LEFT JOIN member_detail d ON m.mem_num = d.mem_num
        <include refid="rentSearch2"></include>
    </select>

</mapper>
