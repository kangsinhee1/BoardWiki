<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.used.dao.UsedMapper"> 
	<sql id="usedSearch">
	 	<where>
	 		<if test="keyword !=null and keyword != ''">
		 		<if test="keyfield == 1">
		 			use_title LIKE '%' || #{keyword} || '%' 
		 		</if>
		 		<if test="keyfield == 2">
		 			use_content LIKE '%' || #{keyword} || '%'
		 		</if>
		 		<if test="keyfield == 3">
		 			item_name LIKE '%' || #{keyword} || '%'  
		 		</if>
	 		</if>
	 	</where>
	 </sql>
	<sql id="usedSearchForClient">
	 	<where>
	 		<if test="keyword !=null and keyword != ''">
		 		<if test="keyfield == 1">
		 			use_title LIKE '%' || #{keyword} || '%' AND use_auth=0
		 		</if>
		 		<if test="keyfield == 2">
		 			use_content LIKE '%' || #{keyword} || '%' AND use_auth=0
		 		</if>
		 		<if test="keyfield == 3">
		 			item_name LIKE '%' || #{keyword} || '%' AND use_auth=0 
		 		</if>
	 		</if>
	 	</where>
	 </sql>
	<sql id="usedSearchByItemNum">
	 	<where>
	 		<if test="item_num !=null and item_num !='' ">
	 			use_auth=0 AND item_num=#{item_num}
	 		</if>
	 		<if test="keyword !=null and keyword != ''">
		 		<if test="keyfield == 1">
		 			use_title LIKE '%' || #{keyword} || '%' AND use_auth=0
		 		</if>
		 		<if test="keyfield == 2">
		 			use_content LIKE '%' || #{keyword} || '%' AND use_auth=0
		 		</if>
		 		<if test="keyfield == 3">
		 			item_name LIKE '%' || #{keyword} || '%' AND use_auth=0
		 		</if>
	 		</if>
	 	</where>
	 </sql>
	 <sql id="usedOrder">
 		<if test="order == 1">
 			ORDER BY use_num DESC
 		</if>
 		<if test="order == 2">
 			ORDER BY use_price DESC
 		</if>
	 </sql>
	 <!-- 게시판 전체 목록/검색 목록 -->
	 <select id="getUsedRowCount" parameterType="map"
									resultType="integer">
		SELECT
			COUNT(*)
		FROM used_item JOIN item USING (item_num)
		<include refid="usedSearch"></include>	 
	 </select>
	 <select id="getUsedRowCountForClient" parameterType="map"
									resultType="integer">
		SELECT
			COUNT(*)
		FROM used_item JOIN item USING (item_num)
		<include refid="usedSearchForClient"></include>
		
	 </select>
	 <select id="getUsedRowCountByItemNum" parameterType="map"
									resultType="integer">
		SELECT
			COUNT(*)
		FROM used_item JOIN item USING (item_num)
		<include refid="usedSearchByItemNum"></include>
		
	 </select>
	<!-- 중고 글 목록 -->
	 <select id="selectUsedList" parameterType="map"
	 							resultType="usedItemVO">
	 	SELECT
	 	   *
	 	FROM (SELECT
	 			a.*,
	 			rownum rnum
	 		   FROM (SELECT
	 		   			*
	 		   		 FROM used_item
	 		   		 JOIN item USING(item_num)
	 		   		 JOIN member USING(mem_num)
	 		   		 JOIN member_detail USING(mem_num)
	 		   		 <include refid="usedSearch"></include>
	 		   		 <include refid="usedOrder"></include>
	 		   		 )a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	 <select id="selectUsedListForClient" parameterType="map"
	 							resultType="usedItemVO">
	 	SELECT
	 	   *
	 	FROM (SELECT
	 			a.*,
	 			rownum rnum
	 		   FROM (SELECT
	 		   			*
	 		   		 FROM used_item
	 		   		 JOIN item USING(item_num)
	 		   		 JOIN member USING(mem_num)
	 		   		 JOIN member_detail USING(mem_num)
	 		   		 <include refid="usedSearchForClient"></include>
	 		   		 <include refid="usedOrder"></include>
	 		   		 )a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
		AND use_auth = 0
	</select>
	 <select id="selectUsedListByItemNum" parameterType="map"
	 							resultType="usedItemVO">
	 	SELECT
	 	   *
	 	FROM (SELECT
	 			a.*,
	 			rownum rnum
	 		   FROM (SELECT
	 		   			*
	 		   		 FROM used_item
	 		   		 JOIN item USING(item_num)
	 		   		 JOIN member USING(mem_num)
	 		   		 JOIN member_detail USING(mem_num)
	 		   		 <include refid="usedSearchByItemNum"></include>
	 		   		 <include refid="usedOrder"></include>
	 		   		 )a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	 <!-- 중고글 선택 -->
	 <select id="selectUsed" parameterType="map" resultType="usedItemVO">
	 	SELECT
	 		 * 
	 	 FROM used_item 
	 	 JOIN member USING(mem_num) 
	 	 LEFT OUTER JOIN member_detail USING(mem_num)
	 	 LEFT OUTER JOIN item USING(item_num) 
	 	 WHERE use_num=#{use_num}
	 </select>
	 <!-- 모임 등록 -->
	  <insert id="insertUsed" parameterType="usedItemVO" >
	  	INSERT INTO used_item(
	  	use_num,
	  	mem_num,
	  	item_num,
	  	use_title,
	  	use_content,
	  	use_photo,
	  	use_price
	  	)
	   VALUES(
	   used_item_seq.nextval,
	   #{mem_num},
	   #{item_num},
	   #{use_title},
	   #{use_content},
	   #{use_photo,jdbcType=VARCHAR},
	   #{use_price}
	   )
	  </insert>
	  <update id="updateUsed" parameterType="usedItemVO">
 		UPDATE used_item SET
 		   <if test="use_photo != null">
 		   use_photo = #{use_photo},
 		   </if>
 		   use_title = #{use_title},
 		   use_content = #{use_content},
 		   use_price = #{use_price},
 		   use_check =#{use_check},
 		   use_mdate = SYSDATE
 		WHERE use_num = #{use_num}
 	</update>
 	
 </mapper>







